name: Analise de linguagem e autopack

on:
  push:
    branches:
      - master

jobs:
  veracode-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Detectar Linguagem do Projeto
        id: detect_language
        run: |
          if find . -type f -name "pom.xml" | grep -q "."; then
            echo "language=java" >> $GITHUB_ENV
            echo "project_path=$(dirname $(find . -type f -name 'pom.xml' | head -n 1))" >> $GITHUB_ENV
          elif find . -type f -name "package.json" | grep -q "."; then
            echo "language=node" >> $GITHUB_ENV
            echo "project_path=$(dirname $(find . -type f -name 'package.json' | head -n 1))" >> $GITHUB_ENV
          elif find . -type f -name "requirements.txt" | grep -q "."; then
            echo "language=python" >> $GITHUB_ENV
            echo "project_path=$(dirname $(find . -type f -name 'requirements.txt' | head -n 1))" >> $GITHUB_ENV
          else
            echo "Linguagem n√£o detectada ou suportada. Abortando."
            exit 1
          fi
          echo "Linguagem detectada: $language"
          echo "Caminho do projeto: $project_path"
      - name: Instalar Depend√™ncias e Compilar
        run: |
          cd $project_path
          mkdir -p $GITHUB_WORKSPACE/artifacts
          if [ "$language" == "java" ]; then
            echo "Instalando e compilando projeto Java com Maven..."
            sudo apt-get update && sudo apt-get install -y openjdk-11-jdk maven
            mvn clean package
            mv target/*.jar $GITHUB_WORKSPACE/artifacts/
          elif [ "$language" == "node" ]; then
            echo "Instalando e compilando projeto Node.js..."
            sudo apt-get update && sudo apt-get install -y nodejs npm
            npm install
            npm run build
            mv dist/* $GITHUB_WORKSPACE/artifacts/
          elif [ "$language" == "python" ]; then
            echo "Instalando depend√™ncias do Python..."
            sudo apt-get update && sudo apt-get install -y python3 python3-pip
            pip3 install -r requirements.txt
            echo "Python geralmente n√£o gera artefatos de build."
            touch $GITHUB_WORKSPACE/artifacts/python_placeholder.txt
          else
            echo "Compila√ß√£o n√£o definida para essa linguagem. Abortando."
            exit 1
          fi
          echo "Artefatos compilados movidos para: $GITHUB_WORKSPACE/artifacts"
      - name: Verificar Artefatos
        run: |
          echo "üìÇ Verificando artefatos em $GITHUB_WORKSPACE/artifacts:"
          ls -la $GITHUB_WORKSPACE/artifacts
      - name: Publicar Artefatos
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: $GITHUB_WORKSPACE/artifacts/

  autopack:
    needs: veracode-analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Baixar e Instalar CLI do Veracode
        run: |
          # Diret√≥rios
          ARTIFACTS_DIR="${{ github.workspace }}/artifacts"
          TARGET_DIR="${{ github.workspace }}/artifacts/${{ github.run_id }}"
          mkdir -p "$TARGET_DIR"
          # Baixar e instalar o CLI do Veracode
          echo "üì• Baixando e instalando CLI do Veracode..."
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          # Verificar se artefatos existem antes do empacotamento
          if [ -z "$(ls -A "$ARTIFACTS_DIR")" ]; then
            echo "‚ùå Nenhum artefato encontrado em $ARTIFACTS_DIR. Abortando."
            exit 1
          fi
          # Copiar os artefatos compilados para o diret√≥rio esperado pelo CLI
          cp -r "$ARTIFACTS_DIR/"* "$TARGET_DIR"
          # Executar o comando de package do Veracode
          echo "üì¶ Executando CLI do Veracode no diret√≥rio $TARGET_DIR..."
          ./veracode package --source "$TARGET_DIR" --type directory --output "$TARGET_DIR/analysisPack.zip" --trust
          # Descompactar pacotes ZIP gerados para valida√ß√£o (opcional)
          echo "üìÇ Validando pacotes gerados em $TARGET_DIR:"
          unzip -l "$TARGET_DIR/analysisPack.zip"
      - name: Publicar Artefato
        uses: actions/upload-artifact@v3
        with:
          name: analysisPack
          path: ${{ github.workspace }}/artifacts/${{ github.run_id }}/analysisPack.zip


  veracode-sast-pipeline-scan:
    needs: autopack
    runs-on: ubuntu-22.04
    steps:
      - name: Baixar Artefato
        uses: actions/download-artifact@v4
        with:
          name: analysisPack

  veracode-sast-policy-scan:
    needs: [autopack, veracode-sast-pipeline-scan]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out main branch
        uses: actions/checkout@v4

      - name: Baixar Artefato
        uses: actions/download-artifact@v3
        with:
          name: analysisPack

      - name: Veracode SAST Policy Scan
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          appname: ${{ github.repository }}
          createprofile: true
          filepath: 'analysisPack.zip'
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          version: "${{ github.run_id }}"
          scantimeout: 12
